{"version":3,"sources":["Pages/data.js","Pages/Companies.js","Pages/Home.js","App.js","theme.js","index.js"],"names":["createData","name","uuid","jobs","reviews","alumni","companies_columns","id","label","minWidth","align","format","value","toLocaleString","companies_rows","useStyles","makeStyles","root","width","container","maxHeight","Company","useParams","CompaniesTable","classes","history","useHistory","React","useState","page","setPage","rowsPerPage","setRowsPerPage","path","Paper","className","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","style","TableBody","slice","row","hover","role","tabIndex","onClick","push","code","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","bullet","display","margin","transform","title","fontSize","pos","marginBottom","HomePage","Grid","spacing","item","xs","sm","md","Card","CardContent","Typography","color","gutterBottom","variant","theme","flexGrow","backgroundColor","palette","background","paper","avatar","App","allTabs","render","location","AppBar","position","Tabs","pathname","Tab","icon","Home","Link","to","disableRipple","Person","marginLeft","createMuiTheme","primary","main","secondary","error","red","A400","default","ReactDOM","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.72aa60d3.chunk.js","sourcesContent":["/* This is temporary data before backend and database */\nfunction createData(name, uuid, jobs, reviews, alumni) {\n    return { name, uuid, jobs, reviews, alumni };\n}\n\nexport const companies_columns = [\n    { id: 'name', label: 'Company', minWidth: 170 },\n    { id: 'uuid', label: 'uuid', minWidth: 100 },\n    {\n        id: 'jobs',\n        label: 'Jobs',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'reviews',\n        label: 'Reviews',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'alumni',\n        label: 'Alumni',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n];\n\nexport const companies_rows = [\n    createData('Apple', '001', 10, 1, 3),\n    createData('Microsoft', '002', 3, 1, 2),\n    createData('Blackrock', '003', 2, 5, 4),\n    createData('AWS', '004', 6, 1, 2),\n    createData('Optiver', '005', 8, 1, 2),\n    createData('Akuna', '006', 4, 1, 2),\n    createData('ByteDance', '007', 2, 1, 2),\n];","import React from 'react';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core/';\nimport { Switch, Route, useHistory, useParams } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { companies_columns, companies_rows } from './data'\n\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 800,\n    },\n});\n\n// Todo\nfunction Company() {\n    let { id } = useParams();\n    return <h5>Requested company ID: {id}</h5>;\n}\n\n\nexport default function CompaniesTable() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Switch>\n            <Route path={`/companies/:id`}>\n                <Company />\n            </Route>\n            <Route path='/companies'>\n                <Paper className={classes.root}>\n                    <TableContainer className={classes.container}>\n                        <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    {companies_columns.map((column) => (\n                                        <TableCell\n                                            key={column.id}\n                                            align={column.align}\n                                            style={{ minWidth: column.minWidth }}\n                                        >\n                                            {column.label}\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {companies_rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                    return (\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                            {companies_columns.map((column) => {\n                                                const value = row[column.id];\n                                                return (\n                                                    <TableCell key={column.id} align={column.align} onClick={() => history.push(`/companies/${row.uuid}`)}>\n                                                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                                                    </TableCell>\n                                                );\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10]}\n                        component=\"div\"\n                        count={companies_rows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </Paper>\n            </Route>\n        </Switch >\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Typography, Card, CardContent } from '@material-ui/core/';\n\nimport { companies_rows } from './data'\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function HomePage() {\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    return (\n        <Grid container spacing={3}>\n            {companies_rows.map((row) =>\n                <Grid item xs={12} sm={6} md={3} key={row.uuid}>\n                    <Card onClick={() => history.push(`/companies/${row.uuid}`)}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                {row.uuid}\n                            </Typography>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                {row.name}\n                            </Typography>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                {row.alumni} Alumni\n                               </Typography>\n                            <Typography variant=\"body2\" component=\"p\">\n                                {row.reviews} Reviews\n                            <br />\n                                {row.jobs + (row.jobs > 1 ? ' Jobs' : ' Job')}\n                            </Typography>\n                        </CardContent>\n                    </Card >\n                </Grid>\n            )\n            }\n        </Grid >);\n}","import React from 'react';\nimport { AppBar, Tabs, Tab } from '@material-ui/core/';\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Home, Person } from '@material-ui/icons';\n\nimport CompaniesTable from './Pages/Companies'\nimport HomePage from './Pages/Home'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  avatar: {\n    color: '#fff',\n    backgroundColor: 'green',\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function App() {\n  const allTabs = ['/', '/companies', '/users', '/profile'];\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter>\n      <div className={classes.root}>\n        <Route\n          path=\"/\"\n          render={({ location }) => (\n            <AppBar position=\"static\">\n              <Tabs value={location.pathname} aria-label=\"simple tabs example\"  >\n                <Tab icon={<Home />} value=\"/\" component={Link} to={allTabs[0]} />\n                <Tab label=\"Companies\" value=\"/companies\" component={Link} to={allTabs[1]} />\n                <Tab label=\"Users\" value=\"/users\" component={Link} to={allTabs[2]} />\n                <Tab\n                  disableRipple icon={<Person />}\n                  style={{ marginLeft: 'auto' }}\n                  value=\"/profile\" component={Link} to={allTabs[3]}\n                />\n              </Tabs>\n            </AppBar >)}\n        />\n        <br />\n        <Switch>\n          <Route path={allTabs[1]} render={() => <div><CompaniesTable /></div>} />\n          <Route path={allTabs[2]} render={() => <div>Users</div>} />\n          <Route path={allTabs[3]} render={() => <div>Profile</div>} />\n          <Route path={allTabs[0]} render={() => <div><HomePage /></div>} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#279687',\n        },\n        secondary: {\n            main: '#41A799',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);"],"sourceRoot":""}